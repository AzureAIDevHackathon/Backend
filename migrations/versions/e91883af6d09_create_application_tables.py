"""Create application tables

Revision ID: e91883af6d09
Revises: 
Create Date: 2025-03-16 13:55:01.211377

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e91883af6d09'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('password_salt', sa.String(length=255), nullable=False),
    sa.Column('reset_token', sa.String(length=255), nullable=True),
    sa.Column('reset_token_expires', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('buckets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('target_amount', sa.Float(), nullable=True),
    sa.Column('current_saved_amount', sa.Float(), nullable=True),
    sa.Column('priority_score', sa.Integer(), nullable=True),
    sa.Column('deadline', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_buckets_id'), 'buckets', ['id'], unique=False)
    op.create_table('financial_summaries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('savings_balance', sa.Float(), nullable=True),
    sa.Column('investment_balance', sa.Float(), nullable=True),
    sa.Column('debt_balance', sa.Float(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_financial_summaries_id'), 'financial_summaries', ['id'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('transaction_date', sa.DateTime(), nullable=True),
    sa.Column('reference', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.String(length=255), nullable=True),
    sa.Column('is_reconciled', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transactions_id'), 'transactions', ['id'], unique=False)
    op.create_table('expenses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rent_mortgage', sa.Float(), nullable=True),
    sa.Column('utilities', sa.Float(), nullable=True),
    sa.Column('insurance', sa.Float(), nullable=True),
    sa.Column('loan_payments', sa.Float(), nullable=True),
    sa.Column('groceries', sa.Float(), nullable=True),
    sa.Column('transportation', sa.Float(), nullable=True),
    sa.Column('subscriptions', sa.Float(), nullable=True),
    sa.Column('entertainment', sa.Float(), nullable=True),
    sa.Column('financial_summary_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['financial_summary_id'], ['financial_summaries.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('financial_summary_id')
    )
    op.create_index(op.f('ix_expenses_id'), 'expenses', ['id'], unique=False)
    op.create_table('incomes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('salary', sa.Float(), nullable=True),
    sa.Column('investments', sa.Float(), nullable=True),
    sa.Column('business_income', sa.Float(), nullable=True),
    sa.Column('financial_summary_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['financial_summary_id'], ['financial_summaries.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('financial_summary_id')
    )
    op.create_index(op.f('ix_incomes_id'), 'incomes', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_incomes_id'), table_name='incomes')
    op.drop_table('incomes')
    op.drop_index(op.f('ix_expenses_id'), table_name='expenses')
    op.drop_table('expenses')
    op.drop_index(op.f('ix_transactions_id'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_financial_summaries_id'), table_name='financial_summaries')
    op.drop_table('financial_summaries')
    op.drop_index(op.f('ix_buckets_id'), table_name='buckets')
    op.drop_table('buckets')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
